trigger pvwattsAutomation on Project__c (after update, after insert) {
    if (Trigger.isAfter){
        if(Trigger.isUpdate){
    for (Id newItem : trigger.newMap.keySet()){
        if(trigger.oldMap.get(newItem).Array_1_Azimuth__c != trigger.newMap.get(newItem).Array_1_Azimuth__c || trigger.oldMap.get(newItem).Array_2_Azimuth__c != trigger.newMap.get(newItem).Array_2_Azimuth__c || trigger.oldMap.get(newItem).Array_3_Azimuth__c != trigger.newMap.get(newItem).Array_3_Azimuth__c || trigger.oldMap.get(newItem).Array_4_Azimuth__c != trigger.newMap.get(newItem).Array_4_Azimuth__c || trigger.oldMap.get(newItem).Array_5_Azimuth__c != trigger.newMap.get(newItem).Array_5_Azimuth__c || trigger.oldMap.get(newItem).Array_6_Azimuth__c != trigger.newMap.get(newItem).Array_6_Azimuth__c){
        	pvwattscallout.makePostCallout(newItem);
        }
        if(trigger.oldMap.get(newItem).Array_1_Tilt__c != trigger.newMap.get(newItem).Array_1_Tilt__c || trigger.oldMap.get(newItem).Array_2_Tilt__c != trigger.newMap.get(newItem).Array_2_Tilt__c || trigger.oldMap.get(newItem).Array_3_Tilt__c != trigger.newMap.get(newItem).Array_3_Tilt__c || trigger.oldMap.get(newItem).Array_4_Tilt__c != trigger.newMap.get(newItem).Array_4_Tilt__c || trigger.oldMap.get(newItem).Array_5_Tilt__c != trigger.newMap.get(newItem).Array_5_Tilt__c || trigger.oldMap.get(newItem).Array_6_Tilt__c != trigger.newMap.get(newItem).Array_6_Tilt__c){
        	pvwattscallout.makePostCallout(newItem);
        }
        if(trigger.oldMap.get(newItem).Array_1_Modules__c != trigger.newMap.get(newItem).Array_1_Modules__c || trigger.oldMap.get(newItem).Array_2_Modules__c != trigger.newMap.get(newItem).Array_2_Modules__c || trigger.oldMap.get(newItem).Array_3_Modules__c != trigger.newMap.get(newItem).Array_3_Modules__c || trigger.oldMap.get(newItem).Array_4_Modules__c != trigger.newMap.get(newItem).Array_4_Modules__c || trigger.oldMap.get(newItem).Array_5_Modules__c != trigger.newMap.get(newItem).Array_5_Modules__c || trigger.oldMap.get(newItem).Array_6_Modules__c != trigger.newMap.get(newItem).Array_6_Modules__c){
        	pvwattscallout.makePostCallout(newItem);
        }
        if(trigger.oldMap.get(newItem).Array_1_Module_DC_W__c != trigger.newMap.get(newItem).Array_1_Module_DC_W__c || trigger.oldMap.get(newItem).Array_2_Module_DC_W__c != trigger.newMap.get(newItem).Array_2_Module_DC_W__c || trigger.oldMap.get(newItem).Array_3_Module_DC_W__c != trigger.newMap.get(newItem).Array_3_Module_DC_W__c || trigger.oldMap.get(newItem).Array_4_Module_DC_W__c != trigger.newMap.get(newItem).Array_4_Module_DC_W__c || trigger.oldMap.get(newItem).Array_5_Module_DC_W__c != trigger.newMap.get(newItem).Array_5_Module_DC_W__c || trigger.oldMap.get(newItem).Array_6_Module_DC_W__c != trigger.newMap.get(newItem).Array_6_Module_DC_W__c){
        	pvwattscallout.makePostCallout(newItem);
        }
	}
        }
        if(Trigger.isInsert){
            for(Project__c newItem: trigger.new){
                if(newItem.Array_1_Module_DC_W__c != null){
                    pvwattscallout.makePostCallout(newItem.Id);
                }
            }
        }
            }}



            @isTest
            public class pvwatssTest {
                static testMethod void addDataToArray1(){
                    Panel__c panel = new panel__c();
                    panel.name = 'test';
                    panel.Active__c = True;
                    insert panel;
                    Account acc = new Account();
                    acc.name = 'test';
                    insert acc;
                    Opportunity opp = new Opportunity();
                    opp.StageName = 'New Opportunity';
                    opp.Name = 'test';
            		opp.Roof_Age__c = 5;
                    opp.Tenure__c = 'More than 12 months';
                    opp.Roof_Type__c = 'Asphalt Shingle';
                    opp.Home_Type__c = 'Single Family Home';
                    opp.Solar_Potential__c = 'Best';
                    opp.Utility_Bill__c = 125.00;
                    opp.Electric_Utility__c = 'ComEd';
                    opp.Decision_Timeline__c = 'Next 10 Days';
                    opp.Cash_Pmt_at_Signing__c = 2000;
                    opp.Cash_Pmt_at_Permits_Approvals__c = 2000;
                    opp.Cash_Pmt_at_Pass_Inspection__c = 2000;
                    opp.Contract_Price_Cash__c = 6000;
                    opp.CloseDate = Date.newInstance(2019, 1, 1);
                    opp.Number_of_Panels__c = 5;
                    opp.Sale_Type__c = 'Cash';
                    opp.Year_1_kWh__c = 1000;
                    opp.Panel_Type__c = panel.Id;
                    insert opp;
                    opp.StageName = 'contract signed';
                    Project__c proj = new Project__c();
                    proj.Account__r = acc;
                    proj.Opportunity__c = opp.Id;
                    proj.Name = 'test';
                    proj.Array_1_Azimuth__c = 180;
                    proj.Array_1_Module_DC_W__c = 327;
                    proj.Array_1_Modules__c = 6;
                    proj.Array_1_Tilt__c = 45;
                    insert proj;
                    proj.Array_1_Azimuth__c = 270;
                    System.assertNotEquals(Null, proj.Array_1_Azimuth__c);
                }
            }
